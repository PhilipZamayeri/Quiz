Index: src/Server/GUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Server;\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.MouseAdapter;\nimport java.awt.event.MouseEvent;\nimport java.util.Collections;\nimport java.util.List;\n\n/**\n * Created by Philip Zamayeri\n * Date: 2020-11-17\n * Time: 11:11\n * Project: Quiz\n * Copyright: MIT\n */\npublic class GUI extends JFrame{\n    DAO dao = new DAO();\n\n    private int correctAnswers = 0;\n    private int result = 0;\n\n    JFrame frame = new JFrame(\"QUIZ\");\n\n    JPanel mainPanel = new JPanel();\n\n    JPanel gamePanel = new JPanel();\n\n    JPanel categoriesPanel = new JPanel();\n    JButton categoryButton1 = new JButton(\"Geografi\");\n    JButton categoryButton2 = new JButton(\"Sport\");\n    JButton categoryButton3 = new JButton(\"NÃ¶je\");\n    JButton categoryButton4 = new JButton(\"Matematik\");\n\n\n    JButton newGame = new JButton(\"Nytt spel\");\n    JButton testButton = new JButton(\"TEST\");\n\n    JLabel question;\n    JButton button1;\n    JButton button2;\n    JButton button3;\n    JButton button4;\n\n\n    public GUI() {\n\n\n        add(mainPanel);\n        mainPanel.setSize(400, 500);\n        mainPanel.setBackground(new Color(127, 61, 61));\n        mainPanel.setLayout(null);\n\n        newGame.setBounds(50, 150, 300, 50);\n        //newGame.setLocation(100, 200);\n        //newGame.setPreferredSize(new Dimension(300, 50));\n        newGame.setBackground(new Color(0x9252260E, true));\n        newGame.setOpaque(true);\n\n        testButton.setBounds(50, 200, 300, 50);\n\n        newGame.addMouseListener(newGameListener);\n\n        mainPanel.add(newGame);\n        mainPanel.add(testButton);\n\n        setVisible(true);\n        setSize(400, 500);\n        setLocationRelativeTo(null);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n\n    }\n\n    public void categories() {\n        categoryButton1.addMouseListener(chooseCategoryListener);\n        categoryButton2.addMouseListener(chooseCategoryListener);\n        categoryButton3.addMouseListener(chooseCategoryListener);\n        categoryButton4.addMouseListener(chooseCategoryListener);\n\n        mainPanel.setVisible(false);\n        add(categoriesPanel);\n\n        categoriesPanel.setBackground(new Color(127, 61, 61));\n        categoriesPanel.setLayout(null);\n\n        categoriesPanel.add(categoryButton1);\n        categoriesPanel.add(categoryButton2);\n        categoriesPanel.add(categoryButton3);\n        categoriesPanel.add(categoryButton4);\n\n        categoryButton1.setBounds(50, 150, 300, 50);\n        categoryButton2.setBounds(50, 210, 300, 50);\n        categoryButton3.setBounds(50, 270, 300, 50);\n        categoryButton4.setBounds(50, 330, 300, 50);\n\n        setVisible(true);\n        setSize(400, 500);\n        setLocationRelativeTo(null);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n\n    }\n\n    public void startNewGame() {\n\n        categoriesPanel.setVisible(false);\n        add(gamePanel);\n\n        gamePanel.add(button1);\n        gamePanel.add(button2);\n        gamePanel.add(button3);\n        gamePanel.add(button4);\n        gamePanel.add(question);\n\n\n        question.setLocation(50, 100);\n        question.setSize(300, 50);\n        question.setVisible(true);\n\n        button1.setBounds(30, 200, 155, 50);\n        button2.setBounds(215, 200, 155, 50);\n        button3.setBounds(30, 250, 155, 50);\n        button4.setBounds(215, 250, 155, 50);\n\n        gamePanel.setBackground(new Color(127, 61, 61));\n        gamePanel.setLayout(null);\n\n        setVisible(true);\n        setSize(400, 500);\n        setLocationRelativeTo(null);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n\n    }\n\n    public void questionSetup(List<Question> category){\n        Collections.shuffle(category);\n        question = new JLabel(category.get(0).getQuestion(), SwingConstants.CENTER);\n        button1 = new JButton(category.get(0).getAlternatives().get(0));\n        button1.addMouseListener(chooseAlternativesListener);\n        button2 = new JButton(category.get(0).getAlternatives().get(1));\n        button2.addMouseListener(chooseAlternativesListener);\n        button3 = new JButton(category.get(0).getAlternatives().get(2));\n        button3.addMouseListener(chooseAlternativesListener);\n        button4 = new JButton(category.get(0).getAlternatives().get(3));\n        button4.addMouseListener(chooseAlternativesListener);\n\n        startNewGame();\n\n\n    }\n\n    public void checkAnswer(List<Question> list, JButton button){\n        if (button.getText().trim().equalsIgnoreCase(list.get(0).getAnswer())){\n            System.out.println(\"Korrekt!\");\n        }\n        else {\n            System.out.println(\"Fel svar!\");\n        }\n    }\n\n    public void category(MouseEvent e){\n        if (categoryButton1 == e.getSource()){\n            questionSetup(dao.geopgraphy);\n        }\n        else if(categoryButton2 == e.getSource()){\n            questionSetup(dao.sport);\n        }\n        else if(categoryButton3 == e.getSource()){\n            questionSetup(dao.pleasure);\n        }\n        else{\n            questionSetup(dao.mathematics);\n        }\n    }\n\n   MouseAdapter chooseAlternativesListener = new MouseAdapter() {\n       @Override\n       public void mouseClicked(MouseEvent e) {\n           super.mouseClicked(e);\n\n       }\n   };\n\n    MouseAdapter chooseCategoryListener = new MouseAdapter() {\n        @Override\n        public void mouseClicked(MouseEvent e) {\n            super.mouseClicked(e);\n            category(e);\n        }\n    };\n\n    MouseAdapter newGameListener = new MouseAdapter() {\n        @Override\n        public void mouseClicked(MouseEvent e) {\n            super.mouseClicked(e);\n            categories();\n        }\n    };\n\n\n\n    public static void main(String[] args) {\n        new GUI();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Server/GUI.java	(revision 38e892aba4988dad39eccfd2fcc272700442543f)
+++ src/Server/GUI.java	(date 1605696862046)
@@ -148,7 +148,7 @@
     }
 
     public void checkAnswer(List<Question> list, JButton button){
-        if (button.getText().trim().equalsIgnoreCase(list.get(0).getAnswer())){
+        if (button.getText().equalsIgnoreCase(list.get(0).getAnswer())){
             System.out.println("Korrekt!");
         }
         else {
